/users:
  get:
    summary: Get all users
    tags:
      - Users
    responses:
      '200':
        description: A list of users
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'

  post:
    summary: Create a new user
    tags:
      - Users
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserInput'
    responses:
      '201':
        description: User created successfully
      '400':
        description: Invalid input

/users/{id}:
  get:
    summary: Get a user by ID
    tags:
      - Users
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: User record found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '404':
        description: User not found

  put:
    summary: Update a user by ID
    tags:
      - Users
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserInput'
    responses:
      '200':
        description: User updated successfully
      '404':
        description: User not found

  delete:
    summary: Delete a user by ID
    tags:
      - Users
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: User deleted successfully
      '404':
        description: User not found
