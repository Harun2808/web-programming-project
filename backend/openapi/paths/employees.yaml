/employees:
  get:
    summary: Get all employees
    tags:
      - Employees
    responses:
      '200':
        description: A list of employees
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee'

  post:
    summary: Create a new employee
    tags:
      - Employees
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeInput'
    responses:
      '201':
        description: Employee created successfully
      '400':
        description: Invalid input

/employees/{id}:
  get:
    summary: Get an employee by ID
    tags:
      - Employees
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: Employee found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      '404':
        description: Employee not found

  put:
    summary: Update an employee by ID
    tags:
      - Employees
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeInput'
    responses:
      '200':
        description: Employee updated successfully
      '404':
        description: Employee not found

  delete:
    summary: Delete an employee by ID
    tags:
      - Employees
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: Employee deleted successfully
      '404':
        description: Employee not found
